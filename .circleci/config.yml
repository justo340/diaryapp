version: 2  # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/training/third_upload
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.6.4
        environment: # environment variables for primary container
          DATABASE_URL: postgresql://justus@localhost/diary?sslmode=disable
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
          ANSIBLE_HOST_KEY_CHECKING: False
      - image: circleci/postgres:9.6.2
        environment: # environment variables for the Postgres container.
          POSTGRES_USER: justus
          POSTGRES_DB: diary
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            pip3 install -r requirements.txt
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            tox
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
  publish:
    docker: # run the steps with Docker
      - image: circleci/python:3.6.4
        environment:
          ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = justo" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python3 setup.py sdist
      - run:
          name: upload to pypi
          command: |
            python3 -m venv  venv
             . venv/bin/activate
             pip3 install --upgrade pip
            pip3 install twine
            twine upload dist/*
      - run:
          name: executing ansible to a remote server
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install ansible
            ansible-playbook -i ansible/hosts ansible/provision.yml
Workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build

      - publish:
          requires:
            - hold
          filters:
            branches:
              only: master
      # - deploy:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
